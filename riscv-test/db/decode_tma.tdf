--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 19.1 cbx_cycloneii 2019:09:22:08:02:34:SJ cbx_lpm_add_sub 2019:09:22:08:02:34:SJ cbx_lpm_compare 2019:09:22:08:02:34:SJ cbx_lpm_decode 2019:09:22:08:02:34:SJ cbx_mgl 2019:09:22:09:26:20:SJ cbx_nadder 2019:09:22:08:02:34:SJ cbx_stratix 2019:09:22:08:02:34:SJ cbx_stratixii 2019:09:22:08:02:34:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode4173w[1..0]	: WIRE;
	w_anode4182w[3..0]	: WIRE;
	w_anode4199w[3..0]	: WIRE;
	w_anode4209w[3..0]	: WIRE;
	w_anode4219w[3..0]	: WIRE;
	w_anode4229w[3..0]	: WIRE;
	w_anode4239w[3..0]	: WIRE;
	w_anode4249w[3..0]	: WIRE;
	w_anode4259w[3..0]	: WIRE;
	w_anode4271w[1..0]	: WIRE;
	w_anode4278w[3..0]	: WIRE;
	w_anode4289w[3..0]	: WIRE;
	w_anode4299w[3..0]	: WIRE;
	w_anode4309w[3..0]	: WIRE;
	w_anode4319w[3..0]	: WIRE;
	w_anode4329w[3..0]	: WIRE;
	w_anode4339w[3..0]	: WIRE;
	w_anode4349w[3..0]	: WIRE;
	w_data4171w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode4349w[3..3], w_anode4339w[3..3], w_anode4329w[3..3], w_anode4319w[3..3], w_anode4309w[3..3], w_anode4299w[3..3], w_anode4289w[3..3], w_anode4278w[3..3]), ( w_anode4259w[3..3], w_anode4249w[3..3], w_anode4239w[3..3], w_anode4229w[3..3], w_anode4219w[3..3], w_anode4209w[3..3], w_anode4199w[3..3], w_anode4182w[3..3]));
	w_anode4173w[] = ( (w_anode4173w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode4182w[] = ( (w_anode4182w[2..2] & (! w_data4171w[2..2])), (w_anode4182w[1..1] & (! w_data4171w[1..1])), (w_anode4182w[0..0] & (! w_data4171w[0..0])), w_anode4173w[1..1]);
	w_anode4199w[] = ( (w_anode4199w[2..2] & (! w_data4171w[2..2])), (w_anode4199w[1..1] & (! w_data4171w[1..1])), (w_anode4199w[0..0] & w_data4171w[0..0]), w_anode4173w[1..1]);
	w_anode4209w[] = ( (w_anode4209w[2..2] & (! w_data4171w[2..2])), (w_anode4209w[1..1] & w_data4171w[1..1]), (w_anode4209w[0..0] & (! w_data4171w[0..0])), w_anode4173w[1..1]);
	w_anode4219w[] = ( (w_anode4219w[2..2] & (! w_data4171w[2..2])), (w_anode4219w[1..1] & w_data4171w[1..1]), (w_anode4219w[0..0] & w_data4171w[0..0]), w_anode4173w[1..1]);
	w_anode4229w[] = ( (w_anode4229w[2..2] & w_data4171w[2..2]), (w_anode4229w[1..1] & (! w_data4171w[1..1])), (w_anode4229w[0..0] & (! w_data4171w[0..0])), w_anode4173w[1..1]);
	w_anode4239w[] = ( (w_anode4239w[2..2] & w_data4171w[2..2]), (w_anode4239w[1..1] & (! w_data4171w[1..1])), (w_anode4239w[0..0] & w_data4171w[0..0]), w_anode4173w[1..1]);
	w_anode4249w[] = ( (w_anode4249w[2..2] & w_data4171w[2..2]), (w_anode4249w[1..1] & w_data4171w[1..1]), (w_anode4249w[0..0] & (! w_data4171w[0..0])), w_anode4173w[1..1]);
	w_anode4259w[] = ( (w_anode4259w[2..2] & w_data4171w[2..2]), (w_anode4259w[1..1] & w_data4171w[1..1]), (w_anode4259w[0..0] & w_data4171w[0..0]), w_anode4173w[1..1]);
	w_anode4271w[] = ( (w_anode4271w[0..0] & data_wire[3..3]), enable_wire);
	w_anode4278w[] = ( (w_anode4278w[2..2] & (! w_data4171w[2..2])), (w_anode4278w[1..1] & (! w_data4171w[1..1])), (w_anode4278w[0..0] & (! w_data4171w[0..0])), w_anode4271w[1..1]);
	w_anode4289w[] = ( (w_anode4289w[2..2] & (! w_data4171w[2..2])), (w_anode4289w[1..1] & (! w_data4171w[1..1])), (w_anode4289w[0..0] & w_data4171w[0..0]), w_anode4271w[1..1]);
	w_anode4299w[] = ( (w_anode4299w[2..2] & (! w_data4171w[2..2])), (w_anode4299w[1..1] & w_data4171w[1..1]), (w_anode4299w[0..0] & (! w_data4171w[0..0])), w_anode4271w[1..1]);
	w_anode4309w[] = ( (w_anode4309w[2..2] & (! w_data4171w[2..2])), (w_anode4309w[1..1] & w_data4171w[1..1]), (w_anode4309w[0..0] & w_data4171w[0..0]), w_anode4271w[1..1]);
	w_anode4319w[] = ( (w_anode4319w[2..2] & w_data4171w[2..2]), (w_anode4319w[1..1] & (! w_data4171w[1..1])), (w_anode4319w[0..0] & (! w_data4171w[0..0])), w_anode4271w[1..1]);
	w_anode4329w[] = ( (w_anode4329w[2..2] & w_data4171w[2..2]), (w_anode4329w[1..1] & (! w_data4171w[1..1])), (w_anode4329w[0..0] & w_data4171w[0..0]), w_anode4271w[1..1]);
	w_anode4339w[] = ( (w_anode4339w[2..2] & w_data4171w[2..2]), (w_anode4339w[1..1] & w_data4171w[1..1]), (w_anode4339w[0..0] & (! w_data4171w[0..0])), w_anode4271w[1..1]);
	w_anode4349w[] = ( (w_anode4349w[2..2] & w_data4171w[2..2]), (w_anode4349w[1..1] & w_data4171w[1..1]), (w_anode4349w[0..0] & w_data4171w[0..0]), w_anode4271w[1..1]);
	w_data4171w[2..0] = data_wire[2..0];
END;
--VALID FILE
